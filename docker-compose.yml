services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orders || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [orchestrator-net]

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - rmqdata:/var/lib/rabbitmq
    networks: [orchestrator-net]

  order-api:
    build : ./services/order-api
    environment:
      NODE_ENV: development
      SERVICE_NAME: order-api
      PORT: 8080

      PG_HOST: postgres
      PG_PORT: 5432
      PG_DB: orders
      PG_USER: postgres
      PG_PASSWORD: postgres
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8080:8080"
    networks: [orchestrator-net]

volumes:
  pgdata:
  rmqdata:

networks:
  orchestrator-net:
    driver: bridge
